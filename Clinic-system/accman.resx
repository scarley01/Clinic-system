<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>